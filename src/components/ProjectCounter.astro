---
// 프로젝트 통계 컴포넌트
const stats = [
  {
    number: 120,
    label: "완료 프로젝트",
    icon: "projects"
  },
  {
    number: 15,
    label: "수상 이력",
    icon: "awards"
  },
  {
    number: 50,
    label: "파트너사",
    icon: "partners"
  },
  {
    number: 98,
    label: "고객 만족도",
    unit: "%",
    icon: "satisfaction"
  }
];
---

<section class="py-16 bg-gray-100">
  <div class="container mx-auto px-4">
    <h2 class="text-3xl font-bold text-center mb-12 fade-in">Do-ing의 성과</h2>
    
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
      {stats.map((item, index) => (
        <div class={`bg-white rounded-lg p-6 text-center shadow-md ${index % 2 === 0 ? 'slide-in-left' : 'slide-in-right'} delay-${index * 100}`}>
          <div class="w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4">
            {item.icon === "projects" && (
              <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />
              </svg>
            )}
            {item.icon === "awards" && (
              <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z" />
              </svg>
            )}
            {item.icon === "partners" && (
              <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
              </svg>
            )}
            {item.icon === "satisfaction" && (
              <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.828 14.828a4 4 0 01-5.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
            )}
          </div>
          <div class="counter-value text-4xl font-bold text-blue-600 mb-2" data-target={item.number.toString()}>0{item.unit || ''}</div>
          <p class="text-gray-600">{item.label}</p>
        </div>
      ))}
    </div>
  </div>
</section>

<script>
  // 숫자 카운터 애니메이션
  document.addEventListener('DOMContentLoaded', () => {
    const countObserver = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const counters = entry.target.querySelectorAll('.counter-value');
          counters.forEach(counter => {
            const target = parseInt(counter.getAttribute('data-target') || '0');
            const unit = counter.textContent?.replace(/[0-9]/g, '') || '';
            let count = 0;
            const speed = 2000 / target; // 총 2초 동안 목표 값까지 증가
            
            const updateCount = () => {
              if (count < target) {
                count += 1;
                counter.textContent = count + unit;
                setTimeout(updateCount, speed);
              } else {
                counter.textContent = target + unit;
              }
            };
            
            updateCount();
          });
          
          countObserver.unobserve(entry.target);
        }
      });
    }, {
      threshold: 0.2
    });
    
    const counterSection = document.querySelector('section');
    if (counterSection) {
      countObserver.observe(counterSection);
    }
  });
</script>